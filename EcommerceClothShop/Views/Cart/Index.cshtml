@model List<EcommerceClothShop.Controllers.CartItem>

@{
    ViewBag.Title = "Shopping Cart";
}

<h2 class="mb-4">Shopping Cart</h2>

@if (Model.Count == 0)
{
    <div class="text-center py-5">
        <p class="lead">Your cart is empty.</p>
        <a href="@Url.Action("Index", "Product")" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left"></i> Continue Shopping
        </a>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered shadow-sm">
            <thead class="table-light">
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th style="width:120px;">Quantity</th>
                    <th>Total</th>
                    <th style="width:100px;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-product-id="@item.Product.ProductID">
                        <td class="align-middle">@item.Product.Name</td>
                        <td class="align-middle">@item.Product.Price.ToString("N0")đ</td>
                        <td class="align-middle">
                            <input type="number" min="1" class="form-control form-control-sm quantity-input rounded"
                                   value="@item.Quantity" data-id="@item.Product.ProductID" />
                        </td>
                        <td class="align-middle total-price">@((item.Product.Price * item.Quantity).ToString("N0"))đ</td>
                        <td class="align-middle text-center">
                            <button class="btn btn-sm btn-outline-danger btn-remove rounded" data-id="@item.Product.ProductID">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center mt-4">
        <h4 class="fw-bold">Total: <span id="cart-total" class="text-primary">@(Model.Sum(i => i.Product.Price * i.Quantity).ToString("N0"))đ</span></h4>

        @if (Session["UserID"] != null)
        {
            <a href="@Url.Action("Checkout", "Cart")" class="btn btn-success btn-lg rounded-pill px-4">
                <i class="bi bi-credit-card"></i> Proceed to Checkout
            </a>
        }
        else
        {
            <a href="@Url.Action("Login", "Auth")" class="btn btn-primary btn-lg rounded-pill px-4">
                <i class="bi bi-box-arrow-in-right"></i> Login to Checkout
            </a>
        }
    </div>
}

@section scripts {
    <script>
        $(document).ready(function () {

            // Format number with comma and currency symbol
            function formatCurrency(amount) {
                return Number(amount).toLocaleString() + "đ";
            }

            function updateCartDisplay(data) {
                if (data.success) {
                    let productRow = $("tr[data-product-id='" + data.productId + "']");
                    productRow.find(".total-price").text(formatCurrency(data.totalItemPrice));
                    $("#cart-total").text(formatCurrency(data.cartTotal));
                    $("#cart-count").text(data.cartCount);
                } else {
                    alert(data.message);
                }
            }

            // Update Quantity
            $(".quantity-input").on("change", function () {
                let productId = $(this).data("id");
                let quantity = parseInt($(this).val());

                if (quantity < 1 || isNaN(quantity)) {
                    $(this).val(1);
                    quantity = 1;
                }

                $.ajax({
                    url: "@Url.Action("UpdateCart", "Cart")",
                    type: "POST",
                    data: { id: productId, quantity: quantity },
                    success: function (data) {
                        updateCartDisplay({ ...data, productId });
                    },
                    error: function () {
                        alert("Error updating cart. Please try again.");
                    }
                });
            });

            // Remove Item with Confirmation
            $(".btn-remove").on("click", function () {
                let productId = $(this).data("id");

                if (confirm("Are you sure you want to remove this item from the cart?")) {
                    $.ajax({
                        url: "@Url.Action("RemoveFromCart", "Cart")",
                        type: "POST",
                        data: { id: productId },
                        success: function (data) {
                            if (data.success) {
                                $("tr[data-product-id='" + productId + "']").fadeOut(300, function () {
                                    $(this).remove();
                                    $("#cart-total").text(formatCurrency(data.cartTotal));
                                    $("#cart-count").text(data.cartCount);
                                });
                            } else {
                                alert(data.message);
                            }
                        },
                        error: function () {
                            alert("Error removing item. Please try again.");
                        }
                    });
                }
            });
        });
    </script>
}
