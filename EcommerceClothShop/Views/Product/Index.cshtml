@model PagedList.IPagedList<EcommerceClothShop.Models.Product>
@using PagedList.Mvc

@{
    ViewBag.Title = "Shop Products";
}

<h2 class="mb-4 text-center text-primary">🛍 Our Products</h2>

<!-- 🔍 Search & Filters -->
<form method="get" action="@Url.Action("Index", "Product")" class="mb-4 search-form">
    <div class="row g-3">
        <div class="col-md-4">
            <input type="text" name="search" class="form-control" placeholder="🔎 Search products..."
                   value="@Request.QueryString["search"]" />
        </div>
        <div class="col-md-3">
            <select name="categoryId" class="form-select">
                <option value="">📂 All Categories</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CategoryID" @(Request.QueryString["categoryId"] == category.CategoryID.ToString() ? "selected" : "")>
                        @category.CategoryName
                    </option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <input type="number" name="minPrice" class="form-control" placeholder="💲 Min Price"
                   value="@Request.QueryString["minPrice"]" />
        </div>
        <div class="col-md-2">
            <input type="number" name="maxPrice" class="form-control" placeholder="💲 Max Price"
                   value="@Request.QueryString["maxPrice"]" />
        </div>
        <div class="col-md-1 text-center">
            <button type="submit" class="btn btn-primary w-100">🔍</button>
        </div>
    </div>
</form>

<!-- 🔹 Product Grid -->
<div class="row">
    @foreach (var product in Model)
    {
        <div class="col-md-4 mb-4">

            <div class="card shadow-sm border-0 rounded-4 hover-effect" >
                <a href="@Url.Action("Details", "Product", new { id = product.ProductID })" style="height: 250px">
                <img src="@product.ImageURL" class="card-img-top rounded-top" alt="@product.Name"
                     style="height: 250px; object-fit: cover;">
                    </a>
                <div class="card-body">
                    <h5 class="card-title text-primary">@product.Name</h5>
                    <p class="text-muted small">
                        @(product.Description.Length > 50 ? product.Description.Substring(0, 50) + "..." : product.Description)
                    </p>
                    <p class="fw-bold fs-5 text-success">$@product.Price</p>
                </div>
                <div class="card-footer d-flex justify-content-between">
                    <button class="btn btn-success add-to-cart"
                            data-product-id="@product.ProductID"
                            data-product-name="@product.Name">
                        🛒 Add to Cart
                    </button>
                    <button class="btn btn-warning buy-now"
                            data-product-id="@product.ProductID"
                            data-product-name="@product.Name"
                            data-product-price="@product.Price">    
                        ⚡ Buy Now
                    </button>
                </div>
            </div>
        </div>
    }
</div>

@if (!Model.Any())
{
    <p class="text-center text-danger fw-bold">❌ No products found.</p>
}

<!-- 🔹 Pagination -->
<div class="text-center mt-4">
    <div class="btn-group">
        @Html.PagedListPager(Model, page => Url.Action("Index", new
               {
                   page,
                   search = Request.QueryString["search"],
                   categoryId = Request.QueryString["categoryId"],
                   minPrice = Request.QueryString["minPrice"],
                   maxPrice = Request.QueryString["maxPrice"]
               }), new PagedListRenderOptions
               {
                   LiElementClasses = new string[] { "page-item" },
                   UlElementClasses = new string[] { "pagination", "justify-content-center" },
                   DisplayLinkToFirstPage = PagedListDisplayMode.Always,
                   DisplayLinkToLastPage = PagedListDisplayMode.Always,
                   DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                   DisplayLinkToNextPage = PagedListDisplayMode.Always,
                   ContainerDivClasses = new string[] { "mt-4" }
               })
    </div>
</div>

<!-- Modal for Add to Cart -->
<div class="modal fade" id="quantityModal" tabindex="-1" aria-labelledby="quantityModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="quantityModalLabel">Select Quantity</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="addCartProductName"></p>
                <label for="addCartQuantity">Quantity:</label>
                <input type="number" id="addCartQuantity" class="form-control" min="1" value="1">
                <input type="hidden" id="addCartProductId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmAddToCart">Add to Cart</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Buy Now -->
<div class="modal fade" id="buyNowModal" tabindex="-1" aria-labelledby="buyNowModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="buyNowModalLabel">Buy Now - Select Quantity</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="buyNowProductName"></p>
                <label for="buyNowQuantity">Quantity:</label>
                <input type="number" id="buyNowQuantity" class="form-control" min="1" value="1">
                <input type="hidden" id="buyNowProductId">
                <input type="hidden" id="buyNowProductPrice">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-warning" id="confirmBuyNow">Buy Now</button>
            </div>
        </div>
    </div>
</div>

<!-- Include jQuery and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        // Add to Cart functionality
        $(document).on("click", ".add-to-cart", function () {
            var productId = $(this).data("product-id");
            var productName = $(this).data("product-name");

            $("#addCartProductName").text("Adding: " + productName);
            $("#addCartProductId").val(productId);
            $("#addCartQuantity").val(1); // Reset quantity to 1

            $("#quantityModal").modal("show");
        });

        $("#confirmAddToCart").click(function () {
            var productId = $("#addCartProductId").val();
            var quantity = $("#addCartQuantity").val();

            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                data: { id: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        alert("Product added to cart!");
                        $("#cart-count").text(response.cartCount);
                        $("#quantityModal").modal("hide");
                    }
                },
                error: function () {
                    alert("Error adding product to cart.");
                }
            });
        });

        // Buy Now functionality
        $(document).on("click", ".buy-now", function () {
            var productId = $(this).data("product-id");
            var productName = $(this).data("product-name");
            var productPrice = $(this).data("product-price");

            $("#buyNowProductName").text("Buying: " + productName);
            $("#buyNowProductId").val(productId);
            $("#buyNowProductPrice").val(productPrice);
            $("#buyNowQuantity").val(1); // Reset quantity to 1

            $("#buyNowModal").modal("show");
        });

        // Updated Buy Now: add to cart then redirect to checkout
        $(document).on("click", "#confirmBuyNow", function () {
            var productId = $("#buyNowProductId").val();
            var quantity = $("#buyNowQuantity").val();

            if (quantity < 1) {
                alert("Please enter a valid quantity.");
                return;
            }

            // First add the product to the cart
            $.ajax({
                url: '@Url.Action("AddToCart", "Cart")',
                type: 'POST',
                data: { id: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        // After successful addition, redirect to checkout
                        window.location.href = '@Url.Action("Checkout", "Cart")';
                    } else {
                        alert("Error adding product to cart for Buy Now.");
                    }
                },
                error: function () {
                    alert("Error adding product to cart for Buy Now.");
                }
            });
        });

        // Reset modal on hide
        $(".modal").on("hidden.bs.modal", function () {
            $(this).find("input[type='number']").val(1);
        });

        // Handle close button click
        $(".modal .close, .modal .btn-secondary").click(function () {
            $(this).closest(".modal").modal("hide");
        });
    });
</script>

<!-- Custom Styles -->
<style>
    /* Search & Filter Form */
    .search-form {
        background-color: #f8f9fa;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .search-form input[type="text"],
        .search-form input[type="number"],
        .search-form select {
            border-radius: 0.25rem;
            border: 1px solid #ced4da;
        }

    /* Product Card Hover Effect */
    .card.hover-effect {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card.hover-effect:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        }

    /* Pagination Styles */
    .pagination {
        display: flex;
        justify-content: center;
        padding: 0;
        margin: 20px 0;
    }

        .pagination .page-item a {
            color: #007bff;
            padding: 0.5rem 0.75rem;
            text-decoration: none;
            border: 1px solid #dee2e6;
            margin: 0 2px;
            border-radius: 0.25rem;
            transition: background-color 0.2s, color 0.2s;
        }

            .pagination .page-item a:hover {
                background-color: #e9ecef;
                
            } 

        .pagination .page-item.active a {
            background-color: #007bff;
            border-color: #007bff;
            color: #fff;
        }
</style>
