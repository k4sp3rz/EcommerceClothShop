@model EcommerceClothShop.Models.User

@{
    ViewBag.Title = "Edit User";
}

<h2>Edit User</h2>

@using (Html.BeginForm("EditUser", "AdminUser", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.UserID) <!-- Ensure UserID is sent in form -->

    <div class="form-group">
        @Html.LabelFor(m => m.FullName)
        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @readonly = "readonly" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Phone)
        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Address)
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Role)
        @Html.DropDownListFor(m => m.Role, new SelectList(new[] { "admin", "customer" }), "Select Role", new { @class = "form-control", required = "required" })
    </div>

    <button type="submit" class="btn btn-primary">Update User</button>
    <a href="@Url.Action("ManageUsers", "AdminUser")" class="btn btn-secondary">Cancel</a>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval") <!-- Ensure client-side validation -->
}
